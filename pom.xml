<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.eclipse.ee4j</groupId>
  <artifactId>cargo-tracker</artifactId>
  <version>3.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>Eclipse Cargo Tracker</name>
  <description>The project demonstrates how you can develop applications with the Jakarta EE platform using widely adopted architectural best practices like Domain-Driven Design (DDD).</description>
  <url>https://eclipse-ee4j.github.io/cargotracker/</url>
  <organization>
    <name>Eclipse Foundation</name>
    <url>https://www.eclipse.org/org/foundation/</url>
  </organization>
  <issueManagement>
    <system>github</system>
    <url>https://github.com/eclipse-ee4j/cargotracker/issues</url>
  </issueManagement>
  <properties>
    <checkstyle.version>10.18.2</checkstyle.version>
    <jakartaee-api.version>10.0.0</jakartaee-api.version>
    <maven.antrun-plugin.version>3.1.0</maven.antrun-plugin.version>
    <maven.cargo-plugin.version>1.10.15</maven.cargo-plugin.version>
    <maven.changes-plugin.version>2.12.1</maven.changes-plugin.version>
    <maven.checkstyle-plugin.version>3.5.0</maven.checkstyle-plugin.version>
    <maven.clean-plugin.version>3.4.0</maven.clean-plugin.version>
    <maven.compiler-plugin.version>3.13.0</maven.compiler-plugin.version>
    <maven.compiler.release>11</maven.compiler.release>
    <maven.dependency-plugin.version>3.8.0</maven.dependency-plugin.version>
    <maven.deploy-plugin.version>3.1.3</maven.deploy-plugin.version>
    <maven.directory-maven-plugin.version>1.0</maven.directory-maven-plugin.version>
    <maven.enforcer-plugin.version>3.5.0</maven.enforcer-plugin.version>
    <maven.exec-plugin.version>3.4.1</maven.exec-plugin.version>
    <maven.install-plugin.version>3.1.3</maven.install-plugin.version>
    <maven.jacoco-plugin.version>0.8.12</maven.jacoco-plugin.version>
    <maven.jar-plugin.version>3.4.2</maven.jar-plugin.version>
    <maven.javadoc-plugin.version>3.10.1</maven.javadoc-plugin.version>
    <maven.jxr-plugin.version>3.5.0</maven.jxr-plugin.version>
    <maven.license-plugin.version>2.4.0</maven.license-plugin.version>
    <!-- TODO Upgrade to 3.25.0+ once we move to PMD 7.6.0+ -->
    <maven.pmd-plugin.version>3.21.2</maven.pmd-plugin.version>
    <maven.project-info-reports-plugin.version>3.7.0</maven.project-info-reports-plugin.version>
    <maven.rat-plugin.version>0.16.1</maven.rat-plugin.version>
    <maven.resources-plugin.version>3.3.1</maven.resources-plugin.version>
    <maven.site-plugin.version>4.0.0-M16</maven.site-plugin.version>
    <maven.source-plugin.version>3.3.1</maven.source-plugin.version>
    <maven.spotbugs-plugin.version>4.8.6.4</maven.spotbugs-plugin.version>
    <maven.surefire-plugin.version>3.5.0</maven.surefire-plugin.version>
    <maven.war-plugin.version>3.4.0</maven.war-plugin.version>
    <maven.version>3.9.9</maven.version>
    <maven.versions-plugin.version>2.17.1</maven.versions-plugin.version>
    <mutability.detector.version>0.9.1</mutability.detector.version>
    <!-- TODO Migrate to 7.6.0+ -->
    <pmd.version>6.55.0</pmd.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.github.repository>eclipse-ee4j/cargotracker</project.github.repository>
    <project.report.sourceEncoding>UTF-8</project.report.sourceEncoding>
    <repository.url>git@github.com:${project.github.repository}.git</repository.url>
    <spotbugs.version>4.8.6</spotbugs.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <!-- Arquillian Bill Of Management used to reduce collision between testing
      dependencies. Using a dependency manager we don't need to specify the version of
      each Arquillian dependency. -->
      <!-- TODO explore if we can move to 1.9.1.Final -->
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.7.2.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.11.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>jakarta.platform</groupId>
      <artifactId>jakarta.jakartaee-api</artifactId>
      <version>${jakartaee-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- The third-party dependencies this application has -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <!-- TODO see if we can move to 14.0.5 -->
    <dependency>
      <groupId>org.primefaces</groupId>
      <artifactId>primefaces</artifactId>
      <version>12.0.0</version>
      <classifier>jakarta</classifier>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- TODO See if we can move to 3.0 -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.26.3</version>
      <scope>test</scope>
    </dependency>
    <!-- Arquillian dependencies -->
    <dependency>
      <groupId>org.jboss.arquillian.junit5</groupId>
      <artifactId>arquillian-junit5-container</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Resolvers are needed in the Arquillian tests. This is used for adding all
    the runtime dependencies inside a testing war. -->
    <!-- TODO see if we can move to 3.3.1 -->
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
      <version>3.1.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.protocol</groupId>
      <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Needed for Arquillian to log -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <finalName>cargo-tracker</finalName>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${maven.spotbugs-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>${spotbugs.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <excludeFilterFile>spotbugs-excludes.xml</excludeFilterFile>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-changes-plugin</artifactId>
          <version>${maven.changes-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven.checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler-plugin.version}</version>
          <configuration>
            <source>{maven.compiler.release}</source>
            <target>{maven.compiler.release}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>${maven.jxr-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven.pmd-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-javascript</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-jsp</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven.project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven.antrun-plugin.version}</version>
        </plugin>
        <plugin>
            <groupId>org.apache.rat</groupId>
            <artifactId>apache-rat-plugin</artifactId>
            <version>${maven.rat-plugin.version}</version>
            <executions>
                <execution>
                    <phase>validate</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                    <configuration>
                        <excludes>
                            <exclude>gclogs/**</exclude>
                        </excludes>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${maven.exec-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${maven.license-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${maven.versions-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <version>${maven.directory-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${maven.jacoco-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war-plugin.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.7.0</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>false</autoReleaseAfterClose>
          <stagingProgressTimeoutMinutes>10</stagingProgressTimeoutMinutes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.hjug.refactorfirst.plugin</groupId>
        <artifactId>refactor-first-maven-plugin</artifactId>
        <version>0.6.0</version>
        <!-- optional -->
        <configuration>
          <showDetails>true</showDetails>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <!-- If versions are not explicitly set it means they're inheriting from the pluginManagement section above -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <plugins>
            <plugin>
              <groupId>org.mutabilitydetector</groupId>
              <artifactId>MutabilityDetector4FindBugs</artifactId>
              <version>${mutability.detector.version}</version>
            </plugin>
          </plugins>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <!-- TODO This configuration is only for when we produce GitHub published reports -->
        <configuration>
          <githubAPIScheme>https</githubAPIScheme>
          <githubAPIPort>443</githubAPIPort>
          <includeOpenIssues>false</includeOpenIssues>
          <onlyCurrentVersion>false</onlyCurrentVersion>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
              <!-- TODO -->
              <!-- <report>github-report</report> -->
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${maven.compiler.release}</targetJdk>
          <rulesets>
            <!-- A rule set, that comes bundled with PMD -->
            <ruleset>pmd-ruleset.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.hjug.refactorfirst.plugin</groupId>
        <artifactId>refactor-first-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <!-- The currently supported application servers are represented as profiles -->
    <profile>
      <id>payara</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <!-- TODO Move to 6.2024.9 -->
        <payara.version>6.2024.6</payara.version>
        <!-- Application properties -->
        <webapp.graphTraversalUrl>http://localhost:8080/cargo-tracker/rest/graph-traversal/shortest-path</webapp.graphTraversalUrl>
        <db.driverClass>org.h2.jdbcx.JdbcDataSource</db.driverClass>
        <!-- H2 file engine requires an absolute path, eg. ~/name, ./name or a full-qualified 
        path name (it should include driver name under Windows). -->
        <db.jdbcUrl>jdbc:h2:file:./cargo-tracker-data/cargo-tracker-database</db.jdbcUrl>
        <db.user />
        <db.password />
      </properties>
      <dependencies>
        <!-- We need a Jersey specific dependency for property name constants -->
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-server</artifactId>
          <version>3.1.2</version>
          <scope>provided</scope>
        </dependency>
        <!-- Embedding the JDBC driver in the WAR works in Payara -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>2.2.224</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>fish.payara.extras</groupId>
          <artifactId>payara-micro</artifactId>
          <version>${payara.version}</version>
          <scope>test</scope>
        </dependency>
        <!-- Payara Micro Managed Container Adapter -->
        <dependency>
          <groupId>fish.payara.arquillian</groupId>
          <artifactId>arquillian-payara-micro-managed</artifactId>
          <version>3.0.alpha8</version>
          <scope>test</scope>
        </dependency>
        <!-- Needed at the moment for Jakarta EE 10 support -->
        <dependency>
          <groupId>fish.payara.arquillian</groupId>
          <artifactId>payara-client-ee9</artifactId>
          <version>3.0.alpha8</version>
          <scope>test</scope>
        </dependency>        
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire-plugin.version}</version>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${maven.cargo-plugin.version}</version>
            <configuration>
              <container>
                <containerId>payara</containerId>
                <artifactInstaller>
                  <groupId>fish.payara.distributions</groupId>
                  <artifactId>payara</artifactId>
                  <version>${payara.version}</version>
                </artifactInstaller>
                <timeout>180000</timeout>
              </container>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>glassfish</id>
      <properties>
       <glassfish.version>7.0.17</glassfish.version>
        <!-- Application properties -->
        <webapp.graphTraversalUrl>http://localhost:8080/cargo-tracker/rest/graph-traversal/shortest-path</webapp.graphTraversalUrl>
        <db.driverClass>org.h2.jdbcx.JdbcDataSource</db.driverClass>
        <!-- H2 file engine requires an absolute path, e.g., ~/name, ./name or a full-qualified
        path name (it should include driver name under Windows). -->
        <db.jdbcUrl>jdbc:h2:file:./cargo-tracker-data/cargo-tracker-database</db.jdbcUrl>
        <db.user />
        <db.password />
      </properties>
      <dependencies>
        <!-- We need a Jersey specific dependency for property name constants -->
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-server</artifactId>
          <version>3.1.2</version>
          <scope>provided</scope>
        </dependency>
        <!-- Embedding the JDBC driver in the WAR works in GlassFish -->
        <!-- TODO move to 2.3.232 -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>2.2.224</version>
          <scope>runtime</scope>
        </dependency>

        <!-- The Arquillian connector for GlassFish. This lets Arquillian
        start and stop GlassFish, and deploy and undeploy war files to it. -->
        <dependency>
          <groupId>org.jboss.arquillian.container</groupId>
          <artifactId>arquillian-glassfish-managed-6</artifactId>
          <version>1.0.0.Alpha1</version>
          <scope>test</scope>
        </dependency>
        <!-- This dependency is required to replace a milestone dependency of
          arquillian-glassfish-managed-6 which isn't deployed in Maven Central -->
        <dependency>
          <groupId>org.glassfish.jersey.inject</groupId>
          <artifactId>jersey-hk2</artifactId>
          <version>3.1.3</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>glassfish</arquillian.launch>
              </systemPropertyVariables>
              <environmentVariables>
                <GLASSFISH_HOME>${project.build.directory}/glassfish7</GLASSFISH_HOME>
              </environmentVariables>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven3-plugin</artifactId>
            <version>${maven.cargo-plugin.version}</version>
            <configuration>
              <container>
                <containerId>glassfish7x</containerId>
                <artifactInstaller>
                  <groupId>org.glassfish.main.distributions</groupId>
                  <artifactId>glassfish</artifactId>
                  <version>${glassfish.version}</version>
                </artifactInstaller>
                <timeout>180000</timeout>
              </container>
            </configuration>
          </plugin>
          <!-- This installs GlassFish into the build directory so that it's used in tests -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven.dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.glassfish.main.distributions</groupId>
                      <artifactId>glassfish</artifactId>
                      <version>${glassfish.version}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.directory}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- This modifies configuration of GlassFish for tests - changes the HTTP port to 9090 -->
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>${maven.antrun-plugin.version}</version>
            <executions>
              <execution>
                <phase>process-test-classes</phase>
                <configuration>
                  <target>
                    <replace file="${project.build.directory}/glassfish7/glassfish/domains/domain1/config/domain.xml" token="&quot;8080&quot;" value="&quot;9090&quot;"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Cloud/production deployment using Payara and PostgreSQL. -->
    <profile>
      <id>cloud</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <payara.version>6.2024.6</payara.version>
        <webapp.graphTraversalUrl>http://localhost:8080/rest/graph-traversal/shortest-path</webapp.graphTraversalUrl>
        <db.driverClass>org.postgresql.ds.PGPoolingDataSource</db.driverClass>
        <!-- Pass in via command line. For example:
        mvn clean package -Pcloud -DpostgreSqlJdbcUrl="jdbc:postgresql://host.docker.internal:5432/postgres" -DpostgreSqlUsername="postgres" -DpostgreSqlPassword="postgres" 
        -->
        <db.jdbcUrl>${postgreSqlJdbcUrl}</db.jdbcUrl>
        <db.user>${postgreSqlUsername}</db.user>
        <db.password>${postgreSqlPassword}</db.password>
      </properties>
      <dependencies>
        <!-- We need a Jersey specific dependency -->
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-server</artifactId>
          <version>3.1.2</version>
          <scope>provided</scope>
        </dependency>
        <!-- Embedding the JDBC driver in the WAR works in Payara Micro -->
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>2.2.224</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>fish.payara.extras</groupId>
          <artifactId>payara-micro</artifactId>
          <version>${payara.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>fish.payara.arquillian</groupId>
          <artifactId>arquillian-payara-micro-managed</artifactId>
          <version>3.0.alpha8</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>fish.payara.arquillian</groupId>
          <artifactId>payara-client-ee9</artifactId>
          <version>3.0.alpha8</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${maven.dependency-plugin.version}</version>
            <executions>
              <execution>
                <id>copy</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <version>42.6.0</version>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>postgresql.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire-plugin.version}</version>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>openliberty</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <db.driverClass>org.hsqldb.jdbc.JDBCDriver</db.driverClass>
        <db.jdbcUrl>jdbc:hsqldb:file:./cargo-tracker-data/cargo-tracker-database;create=true</db.jdbcUrl>
      </properties>
      <dependencies>
        <!-- Provided dependencies -->
        <dependency>
          <groupId>org.hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <version>2.7.2</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.glassfish.jersey.core</groupId>
          <artifactId>jersey-server</artifactId>
          <version>3.1.2</version>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>io.openliberty.arquillian</groupId>
          <artifactId>arquillian-liberty-managed-jakarta-junit5</artifactId>
          <version>2.1.4</version>
          <type>pom</type>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
        <!-- Enable liberty-maven plugin -->
          <plugin>
            <groupId>io.openliberty.tools</groupId>
            <artifactId>liberty-maven-plugin</artifactId>
            <version>3.10.3</version>
            <configuration>
              <copyDependencies>
                <dependencyGroup>
                  <location>${project.build.directory}/liberty/wlp/usr/shared/resources</location>
                  <dependency>
                    <groupId>org.hsqldb</groupId>
                    <artifactId>hsqldb</artifactId>
                  </dependency>
                </dependencyGroup>
              </copyDependencies>
            </configuration>
            <executions>
              <execution>
                <id>install-liberty</id>
                <phase>compile</phase>
                <goals>
                  <goal>create</goal>
                  <goal>install-feature</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire-plugin.version}</version>
            <configuration>
              <systemPropertyVariables>
                <arquillian.launch>openliberty</arquillian.launch>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
